!function(){"use strict";var e={d:function(t,n){for(var o in n)e.o(n,o)&&!e.o(t,o)&&Object.defineProperty(t,o,{enumerable:!0,get:n[o]})},o:function(e,t){return Object.prototype.hasOwnProperty.call(e,t)}};function t(e){return t="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},t(e)}function n(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,o(r.key),r)}}function o(e){var n=function(e){if("object"!=t(e)||!e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var o=n.call(e,"string");if("object"!=t(o))return o;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"==t(n)?n:n+""}e.d({},{q:function(){return ye}});var r=function(){return e=function e(t,n,o){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._name=t.name,this._link=t.link,this._likes=t.likes,this._cardSelector=n,this._handleCardClick=o,this._likesArray=[]},(t=[{key:"_getTemplate",value:function(){return document.querySelector(this._cardSelector).content.querySelector(".element").cloneNode(!0)}},{key:"_updateLikeCount",value:function(){this._element.querySelector(".element__count-like").textContent=this._likes}},{key:"generateCard",value:function(){var e=this;return this._element=this._getTemplate(),this._element.querySelector(".element__title").textContent=this._name,this._element.querySelector(".element__imagen").src=this._link,this._element.querySelector(".element__imagen").alt="Imagen de ".concat(this._name),this._element.querySelector(".element__icon-like").addEventListener("click",(function(t){t.target.classList.toggle("element__icon-like_active"),t.target.classList.contains("element__icon-like_active")&&(e._likes++,e._likesArray.push(e._likes),ye.updateLikes()),e._updateLikeCount()})),this._element.querySelector(".element__icon-delete").addEventListener("click",(function(e){e.target.closest(".element").remove()})),this._element.querySelector(".element__popup-image").addEventListener("click",(function(){e._handleCardClick(e._link,e._name)})),this._element}}])&&n(e.prototype,t),Object.defineProperty(e,"prototype",{writable:!1}),e;var e,t}();function i(e){return i="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},i(e)}function u(e,t){for(var n=0;n<t.length;n++){var o=t[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,c(o.key),o)}}function c(e){var t=function(e){if("object"!=i(e)||!e)return e;var t=e[Symbol.toPrimitive];if(void 0!==t){var n=t.call(e,"string");if("object"!=i(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"==i(t)?t:t+""}var l=function(){return e=function e(t,n){var o=t.items,r=t.renderer;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._initialArray=o,this._renderer=r,this._container=n},(t=[{key:"renderItems",value:function(){var e=this;this._initialArray.forEach((function(t){e._renderer(t)}))}},{key:"addItem",value:function(e){this._container.append(e)}}])&&u(e.prototype,t),Object.defineProperty(e,"prototype",{writable:!1}),e;var e,t}();function a(e){return a="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},a(e)}function s(e,t){for(var n=0;n<t.length;n++){var o=t[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,f(o.key),o)}}function f(e){var t=function(e){if("object"!=a(e)||!e)return e;var t=e[Symbol.toPrimitive];if(void 0!==t){var n=t.call(e,"string");if("object"!=a(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"==a(t)?t:t+""}var p=function(){return e=function e(t){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._popupSelector=t,this._buttonCloseProfile=this._popupSelector.querySelector("#profile"),this._overlayCloseProfile=this._popupSelector.querySelector("#overlay-formprofile"),this._buttonCloseCard=this._popupSelector.querySelector("#add"),this._overlayCloseCard=this._popupSelector.querySelector("#overlay-formcard")},(t=[{key:"open",value:function(){this._popupSelector.classList.add("popup__opened")}},{key:"close",value:function(){this._popupSelector.classList.remove("popup__opened")}},{key:"_handleEscClose",value:function(e){"Escape"===e.key&&this.close()}},{key:"setEventListeners",value:function(){var e=this;this._buttonCloseProfile&&this._buttonCloseProfile.addEventListener("click",(function(){e.close()})),this._overlayCloseProfile&&this._overlayCloseProfile.addEventListener("click",(function(){e.close()})),this._buttonCloseCard&&this._buttonCloseCard.addEventListener("click",(function(){e.close()})),this._overlayCloseCard&&this._overlayCloseCard.addEventListener("click",(function(){e.close()})),document.addEventListener("keydown",(function(t){e._handleEscClose(t)})),document.removeEventListener("keydown",(function(t){e._handleEscClose(t)}))}}])&&s(e.prototype,t),Object.defineProperty(e,"prototype",{writable:!1}),e;var e,t}();function y(e){return y="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},y(e)}function m(e,t){for(var n=0;n<t.length;n++){var o=t[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,b(o.key),o)}}function b(e){var t=function(e){if("object"!=y(e)||!e)return e;var t=e[Symbol.toPrimitive];if(void 0!==t){var n=t.call(e,"string");if("object"!=y(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"==y(t)?t:t+""}function v(e,t,n){return t=S(t),function(e,t){if(t&&("object"==y(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}(e,d()?Reflect.construct(t,n||[],S(e).constructor):t.apply(e,n))}function d(){try{var e=!Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){})))}catch(e){}return(d=function(){return!!e})()}function h(e,t,n,o){var r=_(S(1&o?e.prototype:e),t,n);return 2&o&&"function"==typeof r?function(e){return r.apply(n,e)}:r}function _(){return _="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(e,t,n){var o=function(e,t){for(;!{}.hasOwnProperty.call(e,t)&&null!==(e=S(e)););return e}(e,t);if(o){var r=Object.getOwnPropertyDescriptor(o,t);return r.get?r.get.call(arguments.length<3?e:n):r.value}},_.apply(null,arguments)}function S(e){return S=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},S(e)}function g(e,t){return g=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},g(e,t)}var k=function(e){function t(e){var n;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),(n=v(this,t,[e]))._linkPopupImagen=n._popupSelector.querySelector(".popup__body-imagen"),n._leyendaPopupTitle=n._popupSelector.querySelector(".popup__body-title"),n._closePopupBtnImage=n._popupSelector.querySelector("#imagen"),n._closePopupOverlay=n._popupSelector.querySelector("#overlay-card"),n}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&g(e,t)}(t,e),n=t,(o=[{key:"_handleEscClose",value:function(e){h(t,"_handleEscClose",this,3)([e])}},{key:"open",value:function(e,n){this._linkPopupImagen.src=e,this._leyendaPopupTitle.textContent=n,this._linkPopupImagen.alt="Imagen de ".concat(n),h(t,"open",this,3)([])}},{key:"close",value:function(){h(t,"close",this,3)([])}},{key:"setEventListeners",value:function(){var e=this;this._closePopupBtnImage&&this._closePopupBtnImage.addEventListener("click",(function(){e.close()})),this._closePopupOverlay&&this._closePopupOverlay.addEventListener("click",(function(){e.close()})),document.addEventListener("keydown",(function(t){e._handleEscClose(t)})),document.removeEventListener("keydown",(function(t){e._handleEscClose(t)}))}}])&&m(n.prototype,o),Object.defineProperty(n,"prototype",{writable:!1}),n;var n,o}(p);function w(e){return w="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},w(e)}function P(e,t){for(var n=0;n<t.length;n++){var o=t[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,E(o.key),o)}}function E(e){var t=function(e){if("object"!=w(e)||!e)return e;var t=e[Symbol.toPrimitive];if(void 0!==t){var n=t.call(e,"string");if("object"!=w(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"==w(t)?t:t+""}function C(e,t,n){return t=L(t),function(e,t){if(t&&("object"==w(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}(e,j()?Reflect.construct(t,n||[],L(e).constructor):t.apply(e,n))}function j(){try{var e=!Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){})))}catch(e){}return(j=function(){return!!e})()}function O(){return O="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(e,t,n){var o=function(e,t){for(;!{}.hasOwnProperty.call(e,t)&&null!==(e=L(e)););return e}(e,t);if(o){var r=Object.getOwnPropertyDescriptor(o,t);return r.get?r.get.call(arguments.length<3?e:n):r.value}},O.apply(null,arguments)}function L(e){return L=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},L(e)}function q(e,t){return q=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},q(e,t)}var T=function(e){function t(e,n){var o;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),(o=C(this,t,[e]))._handleFormSubmit=n,o._inputList=o._popupSelector.querySelectorAll(".form__input"),o._contentPopupFormCard=o._popupSelector.closest(".popup-content-add-card"),o}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&q(e,t)}(t,e),n=t,o=[{key:"close",value:function(){this._contentPopupFormCard.classList.remove("popup__opened"),this._popupSelector.reset()}},{key:"_getInputValues",value:function(){var e={};return this._inputList.forEach((function(t){e[t.id]=t.value})),console.log("Valores del formulario:",e),e}},{key:"setEventListeners",value:function(){var e,n,o,r=this;(e=t,n=this,"function"==typeof(o=O(L(1&3?e.prototype:e),"setEventListeners",n))?function(e){return o.apply(n,e)}:o)([]),this._popupSelector.addEventListener("submit",(function(e){e.preventDefault(),r._handleFormSubmit(r._getInputValues()),r.close()}))}}],o&&P(n.prototype,o),Object.defineProperty(n,"prototype",{writable:!1}),n;var n,o}(p);function I(e){return I="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},I(e)}function A(e,t){for(var n=0;n<t.length;n++){var o=t[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,U(o.key),o)}}function U(e){var t=function(e){if("object"!=I(e)||!e)return e;var t=e[Symbol.toPrimitive];if(void 0!==t){var n=t.call(e,"string");if("object"!=I(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"==I(t)?t:t+""}var B={inputSelector:".form__input",submitButtonSelector:".popup__add-btn",inactiveButtonClass:"popup__add-btn_inactive"},x=function(){return e=function e(t,n){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._forms=t,this._formElement=n,this._inputList=Array.from(this._formElement.querySelectorAll(this._forms.inputSelector)),this._buttonElement=this._formElement.querySelector(this._forms.submitButtonSelector)},(t=[{key:"_hasInvalidInput",value:function(){return this._inputList.some((function(e){return!e.validity.valid}))}},{key:"_toggleButtonState",value:function(){this._hasInvalidInput()?(this._buttonElement.classList.add(this._forms.inactiveButtonClass),this._buttonElement.disabled=!0):(this._buttonElement.classList.remove(this._forms.inactiveButtonClass),this._buttonElement.disabled=!1)}},{key:"enableValidation",value:function(){var e=this;this._inputList.forEach((function(t){t.addEventListener("input",(function(){e._toggleButtonState()}))})),this._toggleButtonState()}}])&&A(e.prototype,t),Object.defineProperty(e,"prototype",{writable:!1}),e;var e,t}();function R(e){return R="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},R(e)}function N(e,t){for(var n=0;n<t.length;n++){var o=t[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,D(o.key),o)}}function D(e){var t=function(e){if("object"!=R(e)||!e)return e;var t=e[Symbol.toPrimitive];if(void 0!==t){var n=t.call(e,"string");if("object"!=R(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"==R(t)?t:t+""}var V=function(){return e=function e(t,n){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._nameSelector=t,this._aboutSelector=n},(t=[{key:"getUserInfo",value:function(){return{name:this._nameSelector.textContent,about:this._aboutSelector.textContent}}},{key:"setUserInfo",value:function(e){var t=e.name,n=e.about;this._nameSelector.textContent=t,this._aboutSelector.textContent=n}}])&&N(e.prototype,t),Object.defineProperty(e,"prototype",{writable:!1}),e;var e,t}();function F(e){return F="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},F(e)}function J(e,t){for(var n=0;n<t.length;n++){var o=t[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,z(o.key),o)}}function z(e){var t=function(e){if("object"!=F(e)||!e)return e;var t=e[Symbol.toPrimitive];if(void 0!==t){var n=t.call(e,"string");if("object"!=F(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"==F(t)?t:t+""}var G=function(){return e=function e(t){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._options=t,this._userName=document.querySelector(".nav__profile-nombre"),this._userAbout=document.querySelector(".nav__profile-about"),this._userAvatar=document.querySelector(".nav__profile-avatar"),this._likesCard=document.querySelector(".element__count-like")},(t=[{key:"getUserInfo",value:function(){var e=this;fetch(this._options.baseUrl,{method:"GET",headers:this._options.headers}).then((function(e){return e.ok?e.json():Promise.reject("Error: ".concat(e.status))})).then((function(t){e._userName.textContent=t.name,e._userAbout.textContent=t.about,e._userAvatar.src=t.avatar})).catch((function(e){console.log(e)}))}},{key:"getInitialCards",value:function(e,t){fetch(this._options.baseUrl,{method:"GET",headers:this._options.headers}).then((function(e){return e.ok?e.json():Promise.reject("Error: ".concat(e.status))})).then((function(n){e.length=0;for(var o=0;o<6&&o<n.length;o++)e.push({name:n[o].name,link:n[o].link,likes:n[o].likes});t&&t(e)})).catch((function(e){console.log(e)}))}},{key:"editUserInfo",value:function(){fetch(this._options.baseUrl,{method:"PATCH",headers:this._options.headers,body:JSON.stringify({name:this._userName.textContent,about:this._userAbout.textContent})})}},{key:"cardAditional",value:function(e){fetch(this._options.baseUrl,{method:"POST",headers:this._options.headers,body:JSON.stringify({name:e.place,link:e.link,likes:e.likes})})}},{key:"updateLikes",value:function(){fetch(this._options.baseUrl,{method:"PATCH",headers:this._options.headers,body:JSON.stringify({likes:this._likesCard.textContent})})}}])&&J(e.prototype,t),Object.defineProperty(e,"prototype",{writable:!1}),e;var e,t}(),H=document.querySelector("#btnedit"),K=document.querySelector("#btnadd"),M=document.querySelector("#form__edit"),Q=document.querySelector("#form__add"),W=document.querySelector("#name"),X=document.querySelector("#about"),Y=document.querySelector(".popup-content-profile"),Z=document.querySelector(".nav__profile-nombre"),$=document.querySelector(".nav__profile-about"),ee=document.querySelector(".popup-content-add-card"),te=document.querySelector(".elements"),ne=document.querySelector(".popup-content-imagen"),oe=new x(B,M),re=new x(B,Q),ie=new p(Y),ue=new p(ee),ce=new k(ne),le=new V(Z,$),ae=new k(ne),se=new T(Q,(function(e){pe.push({name:e.place,link:e.link});var t=new r({name:e.place,link:e.link},".template-cards",me);ye.cardAditional(e);var n=t.generateCard();te.prepend(n)})),fe=new G({baseUrl:"https://around.nomoreparties.co/v1/web_es_10/users/me",headers:{authorization:"aef20d41-9cb3-4569-ba79-0c7f1acf4cae","Content-Type":"application/json"}});fe.getUserInfo();var pe=[],ye=new G({baseUrl:"https://around.nomoreparties.co/v1/web_es_10/cards",headers:{authorization:"aef20d41-9cb3-4569-ba79-0c7f1acf4cae","Content-Type":"application/json"}});function me(e,t){ae.open(e,t)}ye.getInitialCards(pe,(function(e){var t=new l({items:e,renderer:function(e){var n=new r(e,".template-cards",me).generateCard();t.addItem(n)}},te);t.renderItems()})),se.setEventListeners(),ie.setEventListeners(),ue.setEventListeners(),ce.setEventListeners(),H.addEventListener("click",(function(){W.value=le.getUserInfo().name,X.value=le.getUserInfo().about,oe.enableValidation(),ie.open()})),K.addEventListener("click",(function(){re.enableValidation(),ue.open()})),M.addEventListener("submit",(function(e){e.preventDefault();var t=W.value,n=X.value;le.setUserInfo({name:t,about:n}),fe.editUserInfo(),Y.classList.remove("popup__opened")}))}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,